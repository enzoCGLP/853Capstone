version: '3.8'

services:
  broker:
    build: .
    container_name: broker
    hostname: broker
    ports:
      - "8883:8883"  # Expose the MQTT port
    networks:
      - iot-network
    restart: always
    environment:
      - ROLE=broker
    volumes:
      - mosquitto_log_data:/var/log/mosquitto  # Mount volume for logs
    # Launch mosquitto service and cds.py
    command: bash -c "mosquitto -c /etc/mosquitto/mosquitto.conf"  # Run mosquitto and cds.py

  cds:
    build: .
    container_name: CDS
    networks:
      - iot-network
    environment:
      - ROLE=client
    command: ["python3", "/app/CSMIM_Network/configured_clients/Crew_1/Client/cds.py"]
    depends_on:
      - broker

  client1:
    build: .
    container_name: Crew_1
    networks:
      - iot-network
    environment:
      - ROLE=client
    command: ["python3", "/app/CSMIM_Network/configured_clients/Crew_1/Client/client.py"]
    depends_on:
      - broker

  client2:
    build: .
    container_name: Light_1
    networks:
      - iot-network
    environment:
      - ROLE=client
    command: ["python3", "/app/CSMIM_Network/configured_clients/Light_1/Client/client.py"]
    depends_on:
      - broker

  kali-gui:
    image: accetto/kali-xfce-vnc
    container_name: kali-gui
    networks:
      - iot-network
    ports:
      - "6080:6080"  # Access GUI via browser at http://localhost:6080
    environment:
      - VNC_PW=root  # Password to access the VNC session (user: root)
    tty: true
    stdin_open: true
    command: bash -c "\
      apt-get update && \
      apt-get install -y wireshark scapy nmap ettercap-graphical && \
      /headless/startup.sh"

networks:
  iot-network:
    driver: bridge

volumes:
  mosquitto_log_data:  #docker volume for mosquitto logs so that they can persist
